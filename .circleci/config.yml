# Arquivo de Configura√ß√£o do CircleCI para a POC de Automa√ß√£o de Documenta√ß√£o
version: 2.1

jobs:
  # Um √∫nico job que executa todas as etapas em sequ√™ncia
  gerar_e_publicar_documentacao_poc:
    # O ambiente precisa de Ruby (para testes/Rswag) e Node.js (para a CLI rdme)
    docker:
      - image: cimg/ruby:3.2.0-node
        environment:
          RAILS_ENV: test
          # Conecta-se ao banco de dados 'app_test' definido no config/database.yml
          DATABASE_URL: "postgresql://postgres:password@localhost/app_test"
      - image: cimg/postgres:13.9
        environment:
          POSTGRES_USER: postgres
          # Cria o banco de dados 'app_test' para corresponder ao database.yml
          POSTGRES_DB: app_test
          POSTGRES_PASSWORD: password

    steps:
      - checkout

      # -- Etapa de Prepara√ß√£o --
      - run:
          name: "Instala Depend√™ncias Ruby"
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: "Prepara Banco de Dados de Teste"
          command: |
            dockerize -wait tcp://localhost:5432 -timeout 1m
            bundle exec rails db:create
            bundle exec rails db:migrate

      # -- Etapa 1: Testar --
      - run:
          name: "Roda Testes (RSpec)"
          # Se este passo falhar, o pipeline para aqui.
          command: bundle exec rspec

      # -- Etapa 2: Gerar --
      - run:
          name: "Gera Especifica√ß√£o OpenAPI com Rswag"
          command: bundle exec rails rswag:specs:swaggerize

     # -- Etapa 3: Publicar --
      - run:
          name: "Instala a CLI do ReadMe"
          command: sudo npm install -g rdme@10

      - run:
          name: "Verifica vari√°veis obrigat√≥rias e arquivo gerado"
          command: |
            if [ -z "$RDME_API_KEY" ]; then
              echo "‚ùå Vari√°vel RDME_API_KEY n√£o definida!"; exit 1;
            fi

            if [ ! -f swagger/v1/swagger.yaml ]; then
              echo "‚ùå Arquivo swagger/v1/swagger.yaml n√£o encontrado!"; exit 1;
            fi

      - run:
          name: "Publica a Documenta√ß√£o da API no ReadMe"
          command: |
            SLUG_PREFIX="minha-api-poc"
            COMMIT_HASH=$(echo $CIRCLE_SHA1 | cut -c 1-7)
            GENERATED_SLUG="${SLUG_PREFIX}-${COMMIT_HASH}"

            echo "üìò Publicando documenta√ß√£o no ReadMe com slug: $GENERATED_SLUG"
            rdme openapi upload swagger/v1/swagger.yaml --key="$RDME_API_KEY" --slug="$GENERATED_SLUG"

workflows:
  poc_workflow:
    jobs:
      - gerar_e_publicar_documentacao_poc:
          filters:
            branches:
              only:
                - main # Roda apenas na sua branch principal